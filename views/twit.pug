doctype
html
  head
    meta(charset='UTF-8')
    title = title
    meta(name='viewport' content='width=device-width, user-scalable=no')
    meta(http-equiv='X-UA-Compatible' content='IE=edge')
    link(rel='stylesheet' href='/twit.css')
  body
    .header
      .nav-header
        .navigation
          div(class = 'nav-left')
            a(href='/twit') Hazel
          div(class = 'nav-right')
              a(href='/twit') Twit
              a(href='/message') Message
              a(href='/profile') Profile
              if user && user.id
                a(href='/auth/logout') Logout
              else
                a(href='/') Login
    #content
      .section
        .timeline
          if user
            div(class='twit-input')
              form#twit-form(action='/post' method='post' enctype='multipart/form-data')
                .input-group
                  textarea#twit(name='content' maxlength=140, placeholder='무슨 생각하세요?')
                .img-preview
                  img#img-preview(src='' style='display: none;' width='300' alt='미리보기')
                  input#img-url(type='hidden' name='url')
                div(class='twit-input-btn')
                  label#img-label(for='img') 사진 업로드
                  input#img(type='file' accept='image/*')
                  button#twit-btn.btn(type='submit') OK
            .twits
              for twit in twits
                .twit
                  .twit-top
                    input.twit-user-id(type='hidden' value=twit.user.id)
                    input.twit-id(type='hidden' value=twit.id)
                    .twit-author= twit.user.nick
                    -const follow = user && user.Followings.map(f => f.id).includes(twit.user.id);
                    if user && user.id !== twit.user.id && !follow
                      button.twit-follow 팔로우하기
                    else if user && user.id !== twit.user.id && follow
                      button.twit-unfollow 팔로우 끊기
                  .twit-mid
                    if twit.img
                      #twit.img
                        img(src=twit.img alt='섬네일' width= '579' height= '350')
                    else
                      .twit-content= twit.content
                  .twit-bottom
                    input.twit-user-id(type='hidden' value=twit.user.id)
                    input.twit-id(type='hidden' value=twit.id)
                    -const like = user && twit && twit.Liker && twit.Liker.map(l => l.id).includes(user.id);
                    -var like_count= twit.Liker && twit.Liker.length || 0
                      .liker 좋아요 #{like_count} 개
                      if user && !like
                        button.like 좋아요
                      else if user && like
                        button.unlike 좋아요 취소
        .container
          .profile-wrap
            if user && user.id
              .user-name= '안녕하세요! ' + user.nick + '님'
              .half
                div 팔로잉
                .count.following-count= user.Followings && user.Followings.length || 0
              .half
                div 팔로워
                .count.follower-count= user.Followers && user.Followers.length || 0
              input#my-id(type='hidden' value=user.id)
          .twit-tag
            form#hashtag-form(action='/post/hashtag')
              input(type='text' name='hashtag' placeholder='태그 검색')
              button.tag 검색
          .recommend-container
            h2 팔로워 추천

  script.
    if (document.getElementById('img')) {
      document.getElementById('img').addEventListener('change', function (e) {
        var formData= new FormData();
        console.log(this, this.files);
        formData.append('img', this.files[0]);
        var xhr = new XMLHttpRequest();
        xhr.onload = function () {
          if (xhr.status === 200) {
            var url = JSON.parse(xhr.responseText).url;
            document.getElementById('img-url').value = url;
            document.getElementById('img-preview').src = url;
            document.getElementById('img-preview').style.display = 'inline';
          } else {
            console.error(xhr.responseText);
          }
        };
        xhr.open('POST', '/post/img');
        xhr.send(formData);
      });
    }
    /// 팔로우하기 ///
    document.querySelectorAll('.twit-follow').forEach(function (tag) {
      tag.addEventListener('click', function () {
        var isLoggedIn = document.querySelector('#my-id');
        if (isLoggedIn) {
          var userId = tag.parentNode.querySelector('.twit-user-id').value;
          var myId = isLoggedIn.value;
          if (userId !== myId) {
            if (confirm('팔로잉 하시겠습니까?')) {
              var xhr = new XMLHttpRequest();
              xhr.onload = function () {
                if (xhr.status === 200) {
                  location.reload();                                    
                } else {
                  console.error(xhr.responseText);
                }
              };
              xhr.open('POST', '/user/' + userId + '/follow');
              xhr.send();
            }
          }
        }
      });
    });

    /// 팔로우 끊기 ///
    document.querySelectorAll('.twit-unfollow').forEach(function (tag) {
      tag.addEventListener('click', function () {
        var isLoggedIn = document.querySelector('#my-id');
        if (isLoggedIn) {
          var userId = tag.parentNode.querySelector('.twit-user-id').value;
          var myId = isLoggedIn.value;
          if (userId !== myId) {
            if (confirm('팔로잉 끊으시겠습니까?')) {
              var xhr = new XMLHttpRequest();
              xhr.onload = function () {
                if (xhr.status === 200) {
                  location.reload();                                    
                } else {
                  console.error(xhr.responseText);
                }
              };
              xhr.open('POST', '/user/' + userId + '/unfollow');
              xhr.send();
            }
          }
        }
      });
    });

    /// 좋아요 ///
    document.querySelectorAll('.like').forEach(function (tag) {
      tag.addEventListener('click', function () {
        var isLoggedIn = document.querySelector('#my-id');
        if (isLoggedIn) {
          var twitId = tag.parentNode.querySelector('.twit-id').value;
          var xhr = new XMLHttpRequest();
          xhr.onload = function () {
            if (xhr.status === 200) {
              location.reload();                                    
            } else {
              console.error(xhr.responseText);
            }
          };
          xhr.open('POST', '/post/' + twitId + '/like');
          xhr.send();
        }
      });
    });

    /// 좋아요 취소 ///
    document.querySelectorAll('.unlike').forEach(function (tag) {
      tag.addEventListener('click', function () {
        var isLoggedIn = document.querySelector('#my-id');
        if (isLoggedIn) {
          var twitId = tag.parentNode.querySelector('.twit-id').value;
          var xhr = new XMLHttpRequest();
          xhr.onload = function () {
            if (xhr.status === 200) {
              location.reload();                                    
            } else {
              console.error(xhr.responseText);
            }
          };
          xhr.open('DELETE', '/post/' + twitId + '/like');
          xhr.send();
        }
      });
    });


    /// 게시글 삭제 ///
    document.querySelectorAll('.delete').forEach(function (tag) {
      tag.addEventListener('click', function () {
        var isLoggedIn = document.querySelector('#my-id');
        var twitId = tag.parentNode.querySelector('.twit-id').value;
        if (isLoggedIn) {
          var userId = tag.parentNode.querySelector('.twit-user-id').value;
          var myId = isLoggedIn.value;
          if (userId === myId) {
            if (confirm('게시글을 삭제하시겠습니까?')) {
              var xhr = new XMLHttpRequest();
              xhr.onload = function () {
                if (xhr.status === 200) {
                  location.reload();                                    
                } else {
                  console.error(xhr.responseText);
                }
              };
              xhr.open('DELETE', '/post/' + twitId);
              xhr.send();
            }
          }
        }
      });
    });

    var nav = document.getElementsByClassName("navigation");

    window.onscroll = function sticky() {
      if(window.pageYOffset > nav[0].offsetTop) {
        nav[0].classList.add("nav");
      } else {
        nav[0].classList.remove("nav");
      }
    }
